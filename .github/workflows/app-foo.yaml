name: Build, Deploy Foo

on:
  push:
    branches:
      - 'master'
      - 'dev/*'
    paths:
      - 'apps/foo/**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/foo:${{ github.sha }}

jobs:
  build-jar-docker:
    name: build-jar-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/dev')
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Depdendencies
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: JDK
        uses: actions/setup-java@v3.1.1
        with:
          java-version: 16
      - name: Build
        run: mvn clean package --projects :foo --also-make --threads=2 --batch-mode
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls
          docker build --tag ${IMAGE} --build-arg JAR_PATH=apps/foo/target/app.jar .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

# We had a custom GitHub Action to deploy to our Kubernetes cluster.
# Examples:
#
#  deploy-dev:
#    name: Deploy to Dev
#    needs: build-jar-docker
#    if: startsWith(github.ref, 'refs/heads/dev') || github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.4
#      - uses: Deploy Action
#        env:
#          CLUSTER: dev-fss
#          RESOURCE: Points to k8s resource
#
#  deploy-prod:
#    name: Deploy to Prod
#    needs: build-jar-docker
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.4
#      - uses:Deploy Action
#        env:
#          CLUSTER: prod-fss
#          RESOURCE: Points to k8s resource
